name: Paint_au_chocolat

on:
  push:
    branches-ignore:
    - "ga-ignore-*"
  pull_request:
    branches-ignore:
    - "ga-ignore-*"

env:
  SOURCE: OrionPX4k/intro-to-chocolatine
  MIRROR_URL: "EpitechPromo2027/B-DOP-200-PAR-2-1-chocolatine-thomas.lebouc"
  EXECUTABLES: "replace_vowel"
  GITHUB_SSH_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}

jobs:
  hello_world:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: give rigth && checking coding-style
      run: chmod +x ./bash_shell/check.sh; ./bash_shell/check.sh $(pwd) $(pwd)
    - name: check result
      run: chmod +x ./bash_shell/checker_bash.sh; ./bash_shell/checker_bash.sh && exit  $? || exit 1

  check_program_compilation:
    runs-on: ubuntu-latest
    needs: check_coding_style
    if: success()
    timeout-minutes: 2
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Pull Docker image
      run: sudo docker pull epitechcontent/epitest-docker
    - name: compile code
      run: |
        chmod +x ./bash_shell/run_epit.sh
        ./bash_shell/run_epit.sh "make && exit $? || exit 1"
    - name: clean code
      run: |
        chmod +x ./bash_shell/run_epit.sh
        ./bash_shell/run_epit.sh "make clean && exit $? || exit 1"
    - name: check if present
      run: |
        IFS=',' read -ra VARS <<< "${EXECUTABLES}"
        chmod +x ./bash_shell/run_epit.sh
        ./bash_shell/run_epit.sh "chmod +x ./bash_shell/check_present.sh && ./bash_shell/check_present.sh ${VARS[@]} && exit $? || exit 1"
    - name: check if executable
      run: |
        IFS=',' read -ra VARS <<< "${EXECUTABLES}"
        chmod +x ./bash_shell/run_epit.sh
        ./bash_shell/run_epit.sh "chmod +x ./bash_shell/check_exec.sh && ./bash_shell/check_exec.sh ${VARS[@]} && exit $? || exit 1"

  run_tests:
    runs-on: ubuntu-latest
    needs: check_program_compilation
    if: success()
    timeout-minutes: 2
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: run_tests
      run: |
        chmod +x ./bash_shell/run_epit.sh
        ./bash_shell/run_epit.sh "make tests_run && exit  $? || exit 1"

  repository_mirroring:
    runs-on: ubuntu-latest
    needs: run_tests
    if: success()
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Push the content to the mirror repository
      uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url: git@github.com:${{ env.MIRROR_URL }}.git
        ssh_private_key: ${{ env.GITHUB_SSH_KEY }}
